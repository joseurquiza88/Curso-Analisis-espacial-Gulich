format = "f",
digits = 1
))
mapa_DE <-
tm_basemap(
c(
Satelite = "Esri.WorldImagery",
Politico = "Esri.WorldGrayCanvas",
Topo = "Esri.WorldTopoMap"
)
) +
tm_shape(interp_MO_DE) +
tm_raster(
col = "DE_pred",
title = "DE de Predicción",
style = "quantile",
palette = "-Spectral",
n = 5
) +
tm_layout(legend.format = list(
scientific = TRUE,
format = "f",
digits = 3
))
mapa_muestra <- tm_shape(suelo_finca3) +
tm_dots(
"MO",
title = "MO Observados (%)",
style = "fixed",
palette = "-Spectral",
breaks = seq(0,3, 0.5),
alpha = 0.7,
size = 0.1,
popup.vars = T,
popup.format = list(
digits = 2,
decimal.mark = ",",
big.mark = "."
)
) +
tm_layout(legend.format = list(scientific = TRUE, format = "f"))
mapas_todos <- mapa_DE + mapa_prediccion + mapa_muestra
mapas_todos
# Generacion de grilla de prediccion ####
grilla <- st_bbox(suelo_finca_limites) %>%
st_as_stars(dx = 5) %>%   # tamaño de la celda, a mas datos puede ser mas chica
st_crop(suelo_finca_limites)
#  Kriging universal ####
interp_MO <-
krige(MO ~ x + y ,
suelo_finca3,
grilla,
model = modelo_teorico_MO_t,
nmax = 25)
interp_MO$DE_pred <- sqrt(interp_MO$var1.var)
interp_MO_DE <- interp_MO
mapa_prediccion <-
tm_basemap(
c(
Satelite = "Esri.WorldImagery",
Politico = "Esri.WorldGrayCanvas",
Topo = "Esri.WorldTopoMap"
)
) +
tm_shape(interp_MO) +
tm_raster(
col = "var1.pred",
title = "MO Predicción (%)",
style = "fixed",
palette = "-Spectral",
contrast = c(0, 1),
breaks = seq(0,3, 0.5),
) +
tm_layout(legend.format = list(
scientific = TRUE,
format = "f",
digits = 1
))
mapa_DE <-
tm_basemap(
c(
Satelite = "Esri.WorldImagery",
Politico = "Esri.WorldGrayCanvas",
Topo = "Esri.WorldTopoMap"
)
) +
tm_shape(interp_MO_DE) +
tm_raster(
col = "DE_pred",
title = "DE de Predicción",
style = "quantile",
palette = "-Spectral",
n = 5
) +
tm_layout(legend.format = list(
scientific = TRUE,
format = "f",
digits = 3
))
mapa_muestra <- tm_shape(suelo_finca3) +
tm_dots(
"MO",
title = "MO Observados (%)",
style = "fixed",
palette = "-Spectral",
breaks = seq(0,3, 0.5),
alpha = 0.7,
size = 0.1,
popup.vars = T,
popup.format = list(
digits = 2,
decimal.mark = ",",
big.mark = "."
)
) +
tm_layout(legend.format = list(scientific = TRUE, format = "f"))
mapas_todos <- mapa_DE + mapa_prediccion + mapa_muestra
mapas_todos
# Generacion de grilla de prediccion ####
grilla <- st_bbox(suelo_finca_limites) %>%
st_as_stars(dx = 5) %>%   # tamaño de la celda, a mas datos puede ser mas chica
st_crop(suelo_finca_limites)
#  Kriging universal ####
interp_MO <-
krige(MO ~ x + y ,
suelo_finca3,
grilla,
model = modelo_teorico_MO_t,
nmax = 25)
interp_MO$DE_pred <- sqrt(interp_MO$var1.var)
interp_MO_DE <- interp_MO
mapa_prediccion <-
tm_basemap(
c(
Satelite = "Esri.WorldImagery",
Politico = "Esri.WorldGrayCanvas",
Topo = "Esri.WorldTopoMap"
)
) +
tm_shape(interp_MO) +
tm_raster(
col = "var1.pred",
title = "MO Predicción (%)",
style = "fixed",
palette = "-Spectral",
contrast = c(0, 1),
breaks = seq(0,3, 0.5),
) +
tm_layout(legend.format = list(
scientific = TRUE,
format = "f",
digits = 1
))
mapa_DE <-
tm_basemap(
c(
Satelite = "Esri.WorldImagery",
Politico = "Esri.WorldGrayCanvas",
Topo = "Esri.WorldTopoMap"
)
) +
tm_shape(interp_MO_DE) +
tm_raster(
col = "DE_pred",
title = "DE de Predicción",
style = "quantile",
palette = "-Spectral",
n = 5
) +
tm_layout(legend.format = list(
scientific = TRUE,
format = "f",
digits = 3
))
mapa_muestra <- tm_shape(suelo_finca3) +
tm_dots(
"MO",
title = "MO Observados (%)",
style = "fixed",
palette = "-Spectral",
breaks = seq(0,3, 0.5),
alpha = 0.7,
size = 0.1,
popup.vars = T,
popup.format = list(
digits = 2,
decimal.mark = ",",
big.mark = "."
)
) +
tm_layout(legend.format = list(scientific = TRUE, format = "f"))
mapas_todos <- mapa_DE + mapa_prediccion + mapa_muestra
mapas_todos
mapview(suelo_finca_limites) +
mapview(grilla)
mapview(suelo_finca_limites) +
mapview(grilla)
# Generacion de grilla de prediccion ####
grilla <- st_bbox(suelo_finca_limites) %>%
st_as_stars(dx = 5) %>%   # tamaño de la celda, a mas datos puede ser mas chica
st_crop(suelo_finca_limites)
#  Kriging universal ####
interp_MO <-
krige(MO ~ x + y ,
suelo_finca3,
grilla,
model = modelo_teorico_MO_t,
nmax = 25)
interp_MO$DE_pred <- sqrt(interp_MO$var1.var)
interp_MO_DE <- interp_MO
mapa_prediccion <-
tm_basemap(
c(
Satelite = "Esri.WorldImagery",
Politico = "Esri.WorldGrayCanvas",
Topo = "Esri.WorldTopoMap"
)
) +
tm_shape(interp_MO) +
tm_raster(
col = "var1.pred",
title = "MO Predicción (%)",
style = "fixed",
palette = "-Spectral",
contrast = c(0, 1),
breaks = seq(0,3, 0.5),
) +
tm_layout(legend.format = list(
scientific = TRUE,
format = "f",
digits = 1
))
mapa_DE <-
tm_basemap(
c(
Satelite = "Esri.WorldImagery",
Politico = "Esri.WorldGrayCanvas",
Topo = "Esri.WorldTopoMap"
)
) +
tm_shape(interp_MO_DE) +
tm_raster(
col = "DE_pred",
title = "DE de Predicción",
style = "quantile",
palette = "-Spectral",
n = 5
) +
tm_layout(legend.format = list(
scientific = TRUE,
format = "f",
digits = 3
))
mapa_muestra <- tm_shape(suelo_finca3) +
tm_dots(
"MO",
title = "MO Observados (%)",
style = "fixed",
palette = "-Spectral",
breaks = seq(0,3, 0.5),
alpha = 0.7,
size = 0.1,
popup.vars = T,
popup.format = list(
digits = 2,
decimal.mark = ",",
big.mark = "."
)
) +
tm_layout(legend.format = list(scientific = TRUE, format = "f"))
mapas_todos <- mapa_DE + mapa_prediccion + mapa_muestra
mapas_todos
mapas_todos <- mapa_DE + mapa_prediccion + mapa_muestra
mapas_todos
mapas_todos <- mapa_DE + mapa_prediccion + mapa_muestra
+ mapa_prediccion + mapa_muestra
mapas_todos <- mapa_DE + mapa_prediccion + mapa_muestra
mapas_todos
####  Visualizacion interactiva ####
tmap_mode('view')
tmap_mode('view')
# Generacion de grilla de prediccion ####
grilla <- st_bbox(suelo_finca_limites) %>%
st_as_stars(dx = 5) %>%   # tamaño de la celda, a mas datos puede ser mas chica
st_crop(suelo_finca_limites)
#  Kriging universal ####
interp_MO <-
krige(MO ~ x + y ,
suelo_finca3,
grilla,
model = modelo_teorico_MO_t,
nmax = 25)
interp_MO$DE_pred <- sqrt(interp_MO$var1.var)
interp_MO_DE <- interp_MO
mapa_prediccion <-
tm_basemap(
c(
Satelite = "Esri.WorldImagery",
Politico = "Esri.WorldGrayCanvas",
Topo = "Esri.WorldTopoMap"
)
) +
tm_shape(interp_MO) +
tm_raster(
col = "var1.pred",
title = "MO Predicción (%)",
style = "fixed",
palette = "-Spectral",
contrast = c(0, 1),
breaks = seq(0,3, 0.5),
) +
tm_layout(legend.format = list(
scientific = TRUE,
format = "f",
digits = 1
))
mapa_DE <-
tm_basemap(
c(
Satelite = "Esri.WorldImagery",
Politico = "Esri.WorldGrayCanvas",
Topo = "Esri.WorldTopoMap"
)
) +
tm_shape(interp_MO_DE) +
tm_raster(
col = "DE_pred",
title = "DE de Predicción",
style = "quantile",
palette = "-Spectral",
n = 5
) +
tm_layout(legend.format = list(
scientific = TRUE,
format = "f",
digits = 3
))
mapa_muestra <- tm_shape(suelo_finca3) +
tm_dots(
"MO",
title = "MO Observados (%)",
style = "fixed",
palette = "-Spectral",
breaks = seq(0,3, 0.5),
alpha = 0.7,
size = 0.1,
popup.vars = T,
popup.format = list(
digits = 2,
decimal.mark = ",",
big.mark = "."
)
) +
tm_layout(legend.format = list(scientific = TRUE, format = "f"))
mapas_todos <- mapa_DE + mapa_prediccion + mapa_muestra
mapas_todos
resumen <- suelo_finca %>%
summarise(Media = mean(MO),
DE = sd(MO),
LI = Media - 2.5 * DE,
LS = Media + 2.5 * DE,
min = min(MO), max = max(MO),
asimetria = e1071::skewness(MO))
as.table(resumen)
list(resumen)
tabla_html <- kable(resumen, format = "html",
col.names = c("Media", "DE", "LI", "LS", "Min", "Max", "Asimetria"))
library(knitr)
opts_chunk$set(echo = F, comment = NA, message = F, warning = F)
tabla_html <- kable(resumen, format = "html",
col.names = c("Media", "DE", "LI", "LS", "Min", "Max", "Asimetria"))
dim(resumen)
resumen
resumen <- suelo_finca %>%
summarise(Media = mean(MO),
DE = sd(MO),
LI = Media - 2.5 * DE,
LS = Media + 2.5 * DE,
min = min(MO), max = max(MO),
asimetria = e1071::skewness(MO))
resumen_df <- data.frame(
Media = resumen$Media,
DE = resumen$DE,
LI = resumen$LI,
LS = resumen$LS,
min = resumen$min,
max = resumen$max,
asimetria = resumen$asimetria
)
tabla_html <- kable(resumen, format = "html",
col.names = c("Media", "DE", "LI", "LS", "Min", "Max", "Asimetria"))
tabla_html <- kable(resumen_df, format = "html",
col.names = c("Media", "DE", "LI", "LS", "Min", "Max", "Asimetria"))
print(tabla_html)
resumen <- suelo_finca %>%
summarise(Media = mean(MO),
DE = sd(MO),
LI = Media - 2.5 * DE,
LS = Media + 2.5 * DE,
min = min(MO), max = max(MO),
asimetria = e1071::skewness(MO))
resumen_df <- data.frame(
Media = resumen$Media,
DE = resumen$DE,
LI = resumen$LI,
LS = resumen$LS,
min = resumen$min,
max = resumen$max,
asimetria = resumen$asimetria
)
tabla_html <- kable(resumen_df, format = "html",
col.names = c("Media", "DE", "LI", "LS", "Min", "Max", "Asimetria"))
print(tabla_html)
suelo_finca1 <- suelo_finca %>%
filter(MO >= resumen$LI)
resumen <- suelo_finca %>%
summarise(Media = mean(MO),
DE = sd(MO),
LI = Media - 2.5 * DE,
LS = Media + 2.5 * DE,
min = min(MO), max = max(MO),
asimetria = e1071::skewness(MO))
resumen_df <- data.frame(
Media = resumen$Media,
DE = resumen$DE,
LI = resumen$LI,
LS = resumen$LS,
min = resumen$min,
max = resumen$max,
asimetria = resumen$asimetria
)
tabla_html <- kable(resumen_df, format = "html",
col.names = c("Media", "DE", "LI", "LS", "Min", "Max", "Asimetria"))
print(tabla_html)
suelo_finca1 <- suelo_finca %>%
filter(MO >= resumen$LI)
print(tabla_html)
modelo_teorico_MO<-
fit.variogram(semi_exp, vgm(c("Exp","Sph", "Gau")))
modelo_teorico_MO
metricas<- validacion_tendencia %>%
summarise(ME = mean(residual),
MAE =  mean(abs(residual)),
MAPE = mean(abs(residual) / observed ) *100,
MSE  =  mean(residual^ 2),
MSNE= mean(zscore ^ 2),
RMSE  =  sqrt(mean(residual ^ 2)),
RMSE_cv  = sqrt(MSE) / mean(observed) * 100)
# Convertir metricas en un marco de datos
metricas_df <- data.frame(
ME = metricas$ME,
MAE = metricas$MAE,
MAPE = metricas$MAPE,
MSE = metricas$MSE,
MSNE = metricas$MSNE,
RMSE = metricas$RMSE,
RMSE_cv = metricas$RMSE_cv
)
# Convertir metricas_df en una tabla HTML para Markdown
tabla_html_metricas <- knitr::kable(metricas_df, format = "html",
col.names = c("ME", "MAE", "MAPE", "MSE", "MSNE", "RMSE", "RMSE_cv"))
# Imprimir la tabla HTML de métricas
print(tabla_html_metricas)
head(datos, 5)
datos <- import("suelo_finca.txt")
suelo_finca <- st_as_sf(datos, coords = c("x", "y"), crs = 32618)
# suelo_finca_limites <- import("suelo_finca_limites.txt", header = T)
# suelo_finca_limites <- st_as_sf(suelo_finca_limites, coords = c("x", "y"), crs = 32618)
suelo_finca_limites <-st_read("limites_finca1.gpkg")
# Mostrar las primeras 5 filas como una tabla HTML
tabla_html <- kable(head(datos, 5), format = "html")
# Imprimir la tabla HTML
print(tabla_html)
tabla_html_metricas
boxplot <- ggplot(datos, aes(y = MO)) +
geom_boxplot() +
ylab("Materia Orgánica (%)")  +
scale_x_discrete(breaks = NULL) +
xlab(NULL) +
theme_light()
grid.arrange(histograma, boxplot, boxplot2, ncol = 3)
histograma <- ggplot(datos, aes(x = MO)) +
geom_histogram(aes(y = after_stat(count) / sum(count))) +
ylab("Frecuencia Relativa") +
theme_grey() + theme_bw()
grid.arrange(histograma, boxplot, boxplot2, ncol = 3)
boxplot2 <- ggplot(datos, aes(y = MO)) +
geom_boxplot(coef = 3) +
ylab("Materia Orgánica (%)")  +
scale_x_discrete(breaks = NULL) +
xlab(NULL) +
theme_light()
histograma <- ggplot(datos, aes(x = MO)) +
geom_histogram(aes(y = after_stat(count) / sum(count))) +
ylab("Frecuencia Relativa") +
theme_grey() + theme_bw()
boxplot <- ggplot(datos, aes(y = MO)) +
geom_boxplot() +
ylab("Materia Orgánica (%)")  +
scale_x_discrete(breaks = NULL) +
xlab(NULL) +
theme_light()
boxplot2 <- ggplot(datos, aes(y = MO)) +
geom_boxplot(coef = 3) +
ylab("Materia Orgánica (%)")  +
scale_x_discrete(breaks = NULL) +
xlab(NULL) +
theme_light()
grid.arrange(histograma, boxplot, boxplot2, ncol = 3)
grid.arrange(boxplot, boxplot2, histograma, ncol = 2, nrow = 2 )
semi_exp
load("H:/Mi unidad/FCA/Cursos y Jornadas/analisis espacial Gulich 2023/Grupo 5 - trabajo final/trabajo final grupo 5 - problema 2/.RData")
